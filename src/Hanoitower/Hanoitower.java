package Hanoitower;
//***************************************************************分治算法（汉诺塔问题）*********************************************************************
public class Hanoitower {

	public static void main(String[] args) {
		hanoiTower(5, 'A', 'B', 'C');
	}

	// 汉诺塔的移动方法
	// 使用分治算法
	public static void hanoiTower(int num, char a, char b, char c) {
		// 如果只有一个盘
		if (num == 1) {
			System.out.println("第1个盘从 " + a + "->" + c);
		} else {
			// 如果多于一个盘，我们总是可以把它看成是两部分
			// ①最下边的一个盘
			// ②上面的所有盘

			// 1. 把上面的所有盘 A->B， 移动过程会使用到 c
			hanoiTower(num - 1, a, c, b);
			// 2. 把最下边的盘 A->C
			System.out.println("第" + num + "个盘从 " + a + "->" + c);
			// 3. 把B塔的所有盘 从 B->C , 移动过程会使用到 a
			hanoiTower(num - 1, b, a, c);

		}
	}

}

